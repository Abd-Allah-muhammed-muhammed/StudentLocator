package com.example.studentlocator;;import android.Manifest;import android.content.pm.PackageManager;import android.graphics.Color;import android.support.annotation.NonNull;import android.support.v4.app.ActivityCompat;import android.support.v4.content.ContextCompat;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;import cn.pedant.SweetAlert.SweetAlertDialog;import me.dm7.barcodescanner.zbar.Result;import me.dm7.barcodescanner.zbar.ZBarScannerView;import static com.example.studentlocator.helper.closeDialog;import static com.example.studentlocator.helper.showSweetDialog;public class ScannerActivity extends AppCompatActivity implements ZBarScannerView.ResultHandler {    private ZBarScannerView mScannerView;    public String TAG  = "tag";    private List<String> idsList = new ArrayList<>();    private String idStudent;    private FirebaseDatabase database;    private int requestcode = 1;    private SweetAlertDialog pDialog;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_scanner);        mScannerView = new ZBarScannerView(this);        checkPermissions();        // Programmatically initialize the scanner view        idStudent = SharedPreferencesManger.LoadStringData(ScannerActivity.this,"id");         database = FirebaseDatabase.getInstance();        final DatabaseReference materials = database.getReference("Materials");materials.addValueEventListener(new ValueEventListener() {    @Override    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {        Iterable<DataSnapshot> children = dataSnapshot.getChildren();        for (DataSnapshot dataSnapshot1 : children) {            String value = String.valueOf(dataSnapshot1.getValue());            idsList.add(value);            Log.d("tag", "value is : "+dataSnapshot1.getValue());        }    }    @Override    public void onCancelled(DatabaseError databaseError) {    }});        setContentView(mScannerView);    }    private void checkPermissions() {        if (ContextCompat.checkSelfPermission(ScannerActivity.this, Manifest.permission.CAMERA)                == PackageManager.PERMISSION_DENIED){            ActivityCompat.requestPermissions(ScannerActivity.this, new String[] {Manifest.permission.CAMERA}, requestcode);        }    }    @Override    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {        if (grantResults.length>1&&requestCode==requestcode){        }else {            checkPermissions();        }    }    @Override    public void handleResult(Result result) {        String contents = result.getContents();        if (idsList.contains(contents)){             pDialog = new SweetAlertDialog(this, SweetAlertDialog.SUCCESS_TYPE);            pDialog.getProgressHelper().setBarColor(Color.parseColor("#FFC107"));            pDialog.setTitleText("You are Attended Successfully");            pDialog.setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {                @Override                public void onClick(SweetAlertDialog sweetAlertDialog) {                    pDialog.dismiss();                    finish();                }            });            pDialog.show();           sendAttend(idStudent,contents);        }else {            pDialog = new SweetAlertDialog(this, SweetAlertDialog.ERROR_TYPE);            pDialog.getProgressHelper().setBarColor(Color.parseColor("#C44A40"));            pDialog.setTitleText("Wrong QR ");            pDialog.setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {                @Override                public void onClick(SweetAlertDialog sweetAlertDialog) {                    pDialog.dismiss();                    finish();                }            });            pDialog.show();        }    }    @Override    protected void onResume() {        super.onResume();        mScannerView.setResultHandler(this); // Register ourselves as a handler for scan results.        mScannerView.startCamera();    }    @Override    protected void onPause() {        super.onPause();        mScannerView.stopCamera();    }   private void sendAttend(String idStudent , String materials){       database = FirebaseDatabase.getInstance();       final DatabaseReference attend = database.getReference("Attend");       AttendModel attendModel = new AttendModel(idStudent,materials);       attend.push().setValue(attendModel);    }}